finish
/clear
/com, Thermal properties
/title, Homogenization Of Composite
/filename, Homogenization_Composite_Thermal, 1
*GET,TT1,ACTIVE,0,TIME,WALL 
/CWD, 'F:\Abdullah\Writing\Articles\Journal004\wire_modeling\Elasticity_thermal_expansion\ansys'
CDOPT,IGES  

/CWD, F:\Abdullah\Writing\Articles\Journal004\Wire_geom

CDREAD,SOLID,'','',,'wire_1_epoxy_assembly_asm_surface','igs'

/prep7
ASEL, ALL
ASEL, U, LOC,Z,0
ADELE,ALL,,,1 
FINISH

/CWD, 'F:\Abdullah\Writing\Articles\Journal004\wire_modeling\Elasticity_thermal_expansion\ansys'

!rf=3.5		! Radius fiber in microns
a2 = 0.905/1000	! x2 length in microns
a3=0.595/1000	! x3 length in microns
a1 = 0.05/1000		! x1 length in microns

tol = 1e-3


max_temp_steps = 30


*DIM, EZ, ARRAY,max_temp_steps,1
*DIM, EX, ARRAY,max_temp_steps,1
*DIM, EY, ARRAY,max_temp_steps,1
*DIM, NUXY, ARRAY,max_temp_steps,1
*DIM, NUXZ, ARRAY,max_temp_steps,1
*DIM, NUYZ, ARRAY,max_temp_steps,1
*DIM, GXY, ARRAY,max_temp_steps,1
*DIM, GYZ, ARRAY,max_temp_steps,1
*DIM, GXZ, ARRAY,max_temp_steps,1
*DIM, ALPZ, ARRAY, max_temp_steps,1
*DIM, ALPX, ARRAY, max_temp_steps,1
*DIM, ALPY, ARRAY, max_temp_steps,1
*DIM,C,ARRAY,6,6
*DIM,A,ARRAY,6,1
*DIM,C11,ARRAY,max_temp_steps,1
*DIM,C12,ARRAY,max_temp_steps,1
*DIM,C13,ARRAY,max_temp_steps,1
*DIM,C22,ARRAY,max_temp_steps,1
*DIM,C23,ARRAY,max_temp_steps,1
*DIM,C33,ARRAY,max_temp_steps,1




/PREP7          	! Pre-processor module  

ASEL, ALL
APLOT
ARSCALE,ALL, , ,1/1000,1/1000,1/1000, ,1,1 
ASEL, ALL
APLOT


/INPUT,'MgB2_E','txt','F:\Abdullah\Writing\Articles\Journal004\material_properties',, 0

/INPUT,'niobium_E','txt','F:\Abdullah\Writing\Articles\Journal004\material_properties',, 0

/INPUT,'copper_E','txt','F:\Abdullah\Writing\Articles\Journal004\material_properties',, 0

/INPUT,'monel_E','txt','F:\Abdullah\Writing\Articles\Journal004\material_properties',, 0

/INPUT,'CTD_E','txt','F:\Abdullah\Writing\Articles\Journal004\material_properties',, 0


/INPUT,'MgB2_thsx','txt','F:\Abdullah\Writing\Articles\Journal004\material_properties',, 0

/INPUT,'niobium_thsx','txt','F:\Abdullah\Writing\Articles\Journal004\material_properties',, 0

/INPUT,'copper_thsx','txt','F:\Abdullah\Writing\Articles\Journal004\material_properties',, 0

/INPUT,'monel_thsx','txt','F:\Abdullah\Writing\Articles\Journal004\material_properties',, 0

/INPUT,'CTD_thsx','txt','F:\Abdullah\Writing\Articles\Journal004\material_properties',, 0

/CWD, 'F:\Abdullah\Writing\Articles\Journal004\wire_modeling\Elasticity_thermal_expansion\ansys'


ET,1,183 
ET,2,SOLID186   	! Choose quad 186 element type  


numcmp, all


ASEL, S, AREA,,2,7
AATT, 1

ASEL, S, AREA,,8,13
AATT, 2

ASEL, S, AREA,,15
AATT, 3

ASEL, S, AREA,,14
AATT, 4

ASEL, S, AREA,,1
AATT, 5

ALLSEL, ALL

ALLSEL, ALL

!ARSYM,X,ALL
!ARSYM,Y,ALL
!NUMMRG,ALL, , , ,LOW
esize,0.01/1000
amesh,all

!asel, all
!arefine, all,,,1

*GET,max_k,KP,0,num,max

KSEL, S, Loc, X, 0
KSEL, R, LOC, Y, 0
KSEL, R, LOC, Z, 0

*GET,min_k,KP,0,num,max

K,max_k+1,,,a1
L,max_k+1, min_k
LESIZE,1,1

*GET,max_ln,LINE,0,num,max

TYPE,   2   
EXTOPT,ATTR,1
EXTOPT,ACLEAR,1   
VDRAG,ALL, , , , , ,max_ln	! Number of divisions on the matrix



*create,srecover !,mac  ! Create macro to calculate average stress
/nopr
ETABLE, ,VOLU,              ! Get element volume
ETABLE, ,S,X                ! Get element stress
ETABLE, ,S,Y
ETABLE, ,S,Z
ETABLE, ,S,XY
ETABLE, ,S,XZ
ETABLE, ,S,YZ
ETABLE, ,S,YZ
SMULT,SXV,VOLU,SX,1,1,      ! Stress by element volume
SMULT,SYV,VOLU,SY,1,1,
SMULT,SZV,VOLU,SZ,1,1,
SMULT,SXYV,VOLU,SXY,1,1,
SMULT,SXZV,VOLU,SXZ,1,1,
SMULT,SYZV,VOLU,SYZ,1,1,
SSUM
*get,totvol,ssum,,item,volu ! Integer stress along total volume
*get,totsx ,ssum,,item,sxv
*get,totsy ,ssum,,item,syv
*get,totsz ,ssum,,item,szv
*get,totsxy ,ssum,,item,sxyv
*get,totsxz ,ssum,,item,sxzv
*get,totsyz ,ssum,,item,syzv

Sxx0 = totsx/totvol     ! Compute average RVE stress
Syy0 = totsy/totvol
Szz0 = totsz/totvol
Sxy0 = totsxy/totvol
Sxz0 = totsxz/totvol
Syz0 = totsyz/totvol
/gopr
*end !srecover

FINISH




*DO, i, 1, max_temp_steps


temp_applied = i*10



            

/SOLU                   ! Solution module


TREF, temp_applied

ANTYPE,STATIC           ! Set static analysis

lsclear,all		! Boundary conditions Column 1
asel,s,loc,x,mgb2_loc_r/2
asel,r,loc,y,0,mgb2_loc_z/2
asel,s,loc,x,0 		! Model X direction = 2 material direction 
asel,a,loc,x,a2
da,all,ux,0
!asel,s,loc,y,mgb2_loc_z/2
!asel,r,loc,x,0,mgb2_loc_r/2
asel,s,loc,y,0 		! Model Y direction = 3 material direction 
asel,a,loc,y,a3
da,all,uy,0
asel,s,loc,z,0 		! Model Z direction = 1 material direction
da,all,uz,0
asel,s,loc,z,a1
da,all,uz,a1
asel,all
lswrite,1

lsclear,all		! Boundary conditions Column 2
asel,s,loc,x,mgb2_loc_r/2
asel,r,loc,y,0,mgb2_loc_z/2
asel,s,loc,x,0 		! Model X direction = 2 material direction 
da,all,ux,0
asel,s,loc,x,a2
da,all,ux,a2
!asel,s,loc,y,mgb2_loc_z/2
!asel,r,loc,x,0,mgb2_loc_r/2
asel,s,loc,y,0 		! Model Y direction = 3 material direction 
asel,a,loc,y,a3
da,all,uy,0
asel,s,loc,z,0 		! Model Z direction = 1 material direction
asel,a,loc,z,a1
da,all,uz,0
asel,all
lswrite,2

lsclear,all		! Boundary conditions Column 3
!asel,s,loc,x,mgb2_loc_r/2
!asel,r,loc,y,0,mgb2_loc_z/2
asel,s,loc,x,0 		! Model X direction = 2 material direction 
asel,a,loc,x,a2
da,all,ux,0
asel,s,loc,y,mgb2_loc_z/2
asel,r,loc,x,0,mgb2_loc_r/2
asel,s,loc,y,0  		! Model Y direction = 3 material direction  
DA,all,uy,0
asel,s,loc,y,a3
da,all,uy,a3
asel,s,loc,z,0 		! Model Z direction = 1 material direction
asel,a,loc,z,a1
da,all,uz,0
asel,all
lswrite,3
         ! Set static analysis

lsclear,all		! Boundary conditions Column 1
asel,s,loc,x,mgb2_loc_r/2
asel,r,loc,y,0,mgb2_loc_z/2
asel,s,loc,x,0 		! Model X direction = 2 material direction 
DA,ALL,ASYM
asel,s,loc,x,a2
da,all,uy,.5*a2
asel,s,loc,y,mgb2_loc_z/2
asel,r,loc,x,0,mgb2_loc_r/2
asel,s,loc,y,0 		! Model Y direction = 3 material direction 
DA,ALL,ASYM
asel,s,loc,y,a3
da,all,ux,0.5*a3
asel,s,loc,z,0 		! Model Z direction = 1 material direction
da,all,uz,0
asel,s,loc,z,a1
da,all,uz,0
asel,all
lswrite,4


lsclear,all		! Boundary conditions Column 1
asel,s,loc,x,mgb2_loc_r/2
asel,r,loc,y,0,mgb2_loc_z/2
asel,s,loc,x,0 		! Model X direction = 2 material direction 
asel,a,loc,x,a2
da,all,ux,0
asel,s,loc,y,mgb2_loc_z/2
asel,r,loc,x,0,mgb2_loc_r/2
asel,s,loc,y,0 		! Model Y direction = 3 material direction 
DA,ALL,ASYM
asel,s,loc,y,a3
da,all,uz,0.5*a3
asel,s,loc,z,0 		! Model Z direction = 1 material direction
DA,ALL,ASYM
asel,s,loc,z,a1
da,all,uy,0.5*a1
asel,all
lswrite,5

lsclear,all		! Boundary conditions Column 1
asel,s,loc,x,mgb2_loc_r/2
asel,r,loc,y,0,mgb2_loc_z/2
asel,s,loc,x,0 		! Model X direction = 2 material direction 
DA,ALL,ASYM
asel,s,loc,x,a2
da,all,uz,0.5*a2
asel,s,loc,y,mgb2_loc_z/2
asel,r,loc,x,0,mgb2_loc_r/2
asel,s,loc,y,0  		! Model Y direction = 3 material direction  
asel,a,loc,y,a3
da,all,uy,0
asel,s,loc,z,0 		! Model Z direction = 1 material direction
DA,ALL,ASYM
asel,s,loc,z,a1
da,all,ux,0.5*a1
asel,all
lswrite,6

lsclear,all		! Boundary conditions Column 1
nsel,s,loc,x,0 		! Model X direction = 2 material direction 
nsel,a,loc,x,a2
nsel,a,loc,y,0 		! Model Y direction = 3 material direction 
nsel,a,loc,y,a3
nsel,a,loc,z,0 		! Model Z direction = 1 material direction
nsel,a,loc,z,a1
d,all,all,0
allsel,all
TREF, 10
BF, ALL, TEMP, temp_applied
lswrite,7




LSSOLVE,1,7		! Solve all load sets
FINISH                  ! Exit solution module



/post1
      


SET,1               ! First column coefficients
*use,srecover
C(1,1) = Szz0
C(2,1) = Sxx0
C(3,1) = Syy0


SET,2               ! Second column coefficients
*use,srecover
C(1,2) = Szz0
C(2,2) = Sxx0
C(3,2) = Syy0


SET,3               ! Third column coefficients
*use,srecover
C(1,3) = Szz0
C(2,3) = Sxx0
C(3,3) = Syy0

SET,4               ! Fith column coefficients
*use,srecover
C(4,4) = Sxy0

SET,5               ! Fith column coefficients
*use,srecover
C(5,5) = Syz0

SET,6               ! Sixth column coefficients
*use,srecover
C(6,6) = Sxz0

SET, 7
*use,srecover
A(1,1) = -Sxx0
A(2,1) = -Syy0
A(3,1) = -Szz0
A(4,1) = -Sxy0
A(5,1) = -Sxz0
A(6,1) = -Syz0

*MOPER, S_Mat, C, INVERT
*MOPER, ALPHA, S_Mat, MULT, A

ALPY(i,1) = alpha(1,1)/temp_applied
ALPX(i,1) = alpha(2,1)/temp_applied
ALPZ(i,1) = alpha(3,1)/temp_applied


E1 = 1/S_Mat(1,1)
E2 = 1/S_Mat(2,2)
E3 = 1/S_Mat(3,3)
nu21 = -E2*S_Mat(1,2)
nu31 = -E3*S_Mat(1,3)
nu12 = -E1*S_Mat(2,1)
nu32 = -E3*S_Mat(2,3)
nu13 = -E1*S_Mat(3,1)
nu23 = -E2*S_Mat(3,2)
G23 = 1/S_Mat(4,4)
G31 = 1/S_Mat(5,5)
G12 = 1/S_Mat(6,6)

Ez(i,1) = E1
Ex(i,1) = E2
EY(i,1) = E3
NUXY(i,1) = (NU32+NU23)/2
NUXZ(i,1) = (NU21+NU12)/2
NUYZ(i,1) = (NU31+NU13)/2
GXY(i,1) = G23
GYZ(i,1) = G31
GXZ(i,1) = G12


*ENDDO		!!This is pseudo enddo. If nonlinear THSX needed, place another *DO



*create, ansuitmp
*cfopen, 'ANSYS_ELASTIC_Values','txt'
 
*VWRITE, EZ(1,1), EX(1,1), EY(1,1), NUXY(1,1), NUXZ(1,1), NUYZ(1,1), GXY(1,1), GYZ(1,1), GXZ(1,1)
(12g16.8)
*cfclose
*END
/INPUT, ansuitmp



*create, ansuitmp
*cfopen, 'TEC_Values','txt'

*VWRITE, ALPX(1,1), ALPY(1,1), ALPZ(1,1)
(3g16.8)
*cfclose
*END
/INPUT, ansuitmp

